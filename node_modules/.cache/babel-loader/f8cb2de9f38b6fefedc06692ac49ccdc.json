{"ast":null,"code":"import axios from 'axios';\nexport const RegisterUser = async _ref => {\n  let {\n    user\n  } = _ref;\n\n  try {\n    await axios.post('http://localhost:8800/auth/register');\n  } catch (error) {}\n};\n_c = RegisterUser;\nexport const LoginUser = async (userDetails, dispatch) => {\n  dispatch({\n    type: \"LOGIN_START\"\n  });\n\n  try {\n    const res = await axios.post('http://localhost:8800/auth/login', userDetails);\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LOGIN_FAILURE\",\n      payload: error\n    });\n  }\n};\n_c2 = LoginUser;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"LoginUser\");","map":{"version":3,"sources":["/Users/eliasadmaso/social-media/Client/src/Components/Service/auth-service.js"],"names":["axios","RegisterUser","user","post","error","LoginUser","userDetails","dispatch","type","res","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAAe;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;;AACvC,MAAG;AACC,UAAMF,KAAK,CAACG,IAAN,CAAW,qCAAX,CAAN;AAEH,GAHD,CAIA,OAAMC,KAAN,EAAY,CAEX;AAEJ,CATM;KAAMH,Y;AAWb,OAAO,MAAMI,SAAS,GAAG,OAAMC,WAAN,EAAkBC,QAAlB,KAA6B;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AACA,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACG,IAAN,CAAW,kCAAX,EAA8CG,WAA9C,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,eAAN;AAAsBE,MAAAA,OAAO,EAACD,GAAG,CAACE;AAAlC,KAAD,CAAR;AACH,GAHD,CAIA,OAAMP,KAAN,EAAY;AACRG,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,eAAN;AAAsBE,MAAAA,OAAO,EAACN;AAA9B,KAAD,CAAR;AAEH;AAEJ,CAXM;MAAMC,S","sourcesContent":["import axios from 'axios';\n\nexport const RegisterUser = async({user})=>{\n    try{\n        await axios.post('http://localhost:8800/auth/register')\n\n    }\n    catch(error){\n\n    }\n\n}\n\nexport const LoginUser = async(userDetails,dispatch)=>{\n    dispatch({type:\"LOGIN_START\"});\n    try{\n        const res = await axios.post('http://localhost:8800/auth/login',userDetails);\n        dispatch({type:'LOGIN_SUCCESS',payload:res.data});\n    }\n    catch(error){\n        dispatch({type:\"LOGIN_FAILURE\",payload:error})\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}